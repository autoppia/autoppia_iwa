{
  "title": "Task-Based Action Schema",
  "description": "Schema to specify a list of actions with required parameters for each action type, selector type, and values to locate and interact with elements.",
  "type": "object",
  "properties": {
    "action": {
      "description": "List of actions to perform sequentially, including action types and optional selectors.",
      "type": "object",
      "properties": {
        "selector": {
          "description": "Attributes for locating the target HTML element.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Selector type (e.g., 'attributeValueSelector', 'tagContainsSelector', 'xpathSelector')",
              "type": "string",
              "enum": [
                "attributeValueSelector",
                "tagContainsSelector",
                "xpathSelector"
              ]
            },
            "attribute": {
              "description": "The HTML attribute for 'attributeValueSelector' (e.g., 'id', 'class', 'aria-label').",
              "type": "string",
              "enum": [
                "id",
                "class",
                "placeholder",
                "name",
                "role",
                "value",
                "type",
                "aria-label",
                "aria-labelledby",
                "data-testid",
                "data-custom"
              ]
            },
            "value": {
              "description": "The specific value used by the selector to identify an element uniquely. For 'attributeValueSelector', this should match the attribute's value (e.g., 'search-bar' for id='search-bar'). For 'tagContainsSelector', provide partial or complete tag content (e.g., 'Submit' for a button with text 'Submit'). For 'xpathSelector', this should be a valid XPath expression (e.g., '//div[@class=\"example\"]').",
              "type": "string"
            },
            "case_sensitive": {
              "description": "Whether the match is case-sensitive (applicable for 'tagContainsSelector').",
              "type": "boolean",
              "default": false
            }
          },
          "required": [
            "type",
            "value"
          ],
          "oneOf": [
            {
              "properties": {
                "type": {
                  "const": "attributeValueSelector"
                },
                "attribute": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "attribute",
                "value"
              ]
            },
            {
              "properties": {
                "type": {
                  "const": "tagContainsSelector"
                },
                "value": {
                  "type": "string"
                },
                "case_sensitive": {
                  "type": "boolean"
                }
              },
              "required": [
                "type",
                "value"
              ]
            },
            {
              "properties": {
                "type": {
                  "const": "xpathSelector"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "value"
              ]
            }
          ]
        },
        "action": {
          "description": "Action to execute, including action type and any parameters required.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of action to perform",
              "type": "string",
              "enum": [
                "click",
                "doubleClick",
                "type",
                "hover",
                "navigate",
                "dragAndDrop",
                "screenshot",
                "wait",
                "scroll",
                "submit",
                "assert",
                "select"
              ]
            },
            "parameters": {
              "description": "Parameters specific to the action type",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Value for actions like 'type' or 'assert', or the key to press if action type is 'press'.",
                  "type": "string"
                },
                "button": {
                  "description": "Mouse button type if action is 'click', 'doubleClick', or 'rightClick'",
                  "type": "string",
                  "enum": [
                    "left",
                    "right"
                  ],
                  "default": "left"
                },
                "url": {
                  "description": "URL to navigate to for 'navigate' action.",
                  "type": "string"
                },
                "sourceSelector": {
                  "description": "Selector for the source element in 'dragAndDrop' actions.",
                  "type": "string"
                },
                "targetSelector": {
                  "description": "Selector for the target element in 'dragAndDrop' actions.",
                  "type": "string"
                },
                "direction": {
                  "description": "Scroll direction for 'scroll' action.",
                  "type": "string",
                  "enum": [
                    "up",
                    "down",
                    "left",
                    "right"
                  ]
                },
                "assertion": {
                  "description": "Assertion value for 'assert' action",
                  "type": "string"
                }
              },
              "oneOf": [
                {
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "type": {
                      "const": "type"
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "properties": {
                    "url": {
                      "type": "string"
                    },
                    "type": {
                      "const": "navigate"
                    }
                  },
                  "required": [
                    "url"
                  ]
                },
                {
                  "properties": {
                    "sourceSelector": {
                      "type": "string"
                    },
                    "targetSelector": {
                      "type": "string"
                    },
                    "type": {
                      "const": "dragAndDrop"
                    }
                  },
                  "required": [
                    "sourceSelector",
                    "targetSelector"
                  ]
                },
                {
                  "properties": {
                    "direction": {
                      "type": "string"
                    },
                    "type": {
                      "const": "scroll"
                    }
                  },
                  "required": [
                    "direction"
                  ]
                },
                {
                  "properties": {
                    "assertion": {
                      "type": "string"
                    },
                    "type": {
                      "const": "assert"
                    }
                  },
                  "required": [
                    "assertion"
                  ]
                }
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "selector",
        "action"
      ]
    }
  },
  "required": [
    "action"
  ]
}
